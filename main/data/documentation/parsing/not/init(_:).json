{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"build"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A parser that causes this parser to fail if it succeeds, or succeed if it"},{"type":"text","text":" "},{"type":"text","text":"fails."}],"type":"paragraph"}],"name":"build"}],"kind":"parameters"}],"abstract":[{"type":"text","text":"Creates a parser that succeeds if the given parser fails, and does not consume any input."}],"sections":[],"variants":[{"paths":["\/documentation\/parsing\/not\/init(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","metadata":{"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}],"roleHeading":"Initializer","modules":[{"name":"Parsing"}],"symbolKind":"init","role":"symbol","externalID":"s:7Parsing3NotVyACyxGxyXEcfc"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","role":"symbol","title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"type":"topic","url":"\/documentation\/parsing\/not","navigatorTitle":[{"text":"Not","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"Not","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not/init(_:)":{"type":"topic","abstract":[{"type":"text","text":"Creates a parser that succeeds if the given parser fails, and does not consume any input."}],"kind":"symbol","url":"\/documentation\/parsing\/not\/init(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not\/init(_:)","role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":")"}]}}}