{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/fromutf8view\/init(_:)-17p1p"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"No overview available.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"build","kind":"internalParam"},{"text":": () -> ","kind":"text"},{"text":"UTF8Parser","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View\/init(_:)-17p1p","interfaceLanguage":"swift"},"sections":[],"metadata":{"role":"symbol","conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":", "},{"code":"UTF8Parser","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", and "},{"code":"UTF8Parser.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"Parsing","externalID":"s:7Parsing12FromUTF8ViewVAASsRszrlEyACySsq_Gq_yXEcfc","modules":[{"name":"Parsing"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"UTF8Parser"},{"kind":"text","text":")"}],"title":"init(_:)","symbolKind":"init"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View/init(_:)-17p1p":{"type":"topic","url":"\/documentation\/parsing\/fromutf8view\/init(_:)-17p1p","kind":"symbol","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"UTF8Parser","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"UTF8Parser"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", and "},{"type":"codeVoice","code":"UTF8Parser.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View\/init(_:)-17p1p","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"abstract":[],"type":"topic","url":"\/documentation\/parsing\/fromutf8view","navigatorTitle":[{"kind":"identifier","text":"FromUTF8View"}],"role":"symbol","kind":"symbol","title":"FromUTF8View","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromUTF8View"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","role":"symbol","title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic"}}}