{"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Parsers","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you will usually loop","type":"text"},{"text":" ","type":"text"},{"text":"over each parser in a builder block:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["enum Role: String, CaseIterable {","  case admin","  case guest","  case member","}","","let roleParser = OneOf {","  for role in Role.allCases {","    status.rawValue.map { role }","  }","}"]}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations"],"generated":true,"title":"Default Implementations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Structure","extendedModule":"Parsing","role":"symbol","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"externalID":"s:7Parsing7ParsersO9OneOfManyV","symbolKind":"struct","title":"Parsers.OneOfMany","modules":[{"name":"Parsing"}]},"variants":[{"paths":["\/documentation\/parsing\/parsers\/oneofmany"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","role":"symbol","title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations","kind":"article","title":"Parser Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/init(_:)":{"title":"init(_:)","url":"\/documentation\/parsing\/parsers\/oneofmany\/init(_:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parsers":{"abstract":[],"type":"topic","kind":"symbol","title":"parsers","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parsers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers","url":"\/documentation\/parsing\/parsers\/oneofmany\/parsers"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"role":"symbol","navigatorTitle":[{"text":"OneOfMany","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany","url":"\/documentation\/parsing\/parsers\/oneofmany","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"}],"kind":"symbol","title":"Parsers.OneOfMany","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","role":"symbol","title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","kind":"symbol","title":"parse(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)","url":"\/documentation\/parsing\/parsers\/oneofmany\/parse(_:)"}}}