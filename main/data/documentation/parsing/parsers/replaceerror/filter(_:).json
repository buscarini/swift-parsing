{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","externalID":"s:7Parsing6ParserPAAE6filteryAA7ParsersO6FilterVy_xGSb6OutputQzcF::SYNTHESIZED::s:7Parsing7ParsersO12ReplaceErrorV","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"filter"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","modules":[{"name":"Parsing"}],"role":"symbol","extendedModule":"Parsing","title":"filter(_:)"},"abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parsers\/replaceerror\/filter(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","text":"Parsers"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing7ParsersO6FilterV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","text":"Filter"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A parser that filters its output."}],"type":"paragraph"}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an output from this parser and returns a Boolean"},{"type":"text","text":" "},{"type":"text","text":"value indicating whether the output should be returned."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"This method is similar to ","type":"text"},{"code":"Sequence.filter","type":"codeVoice"},{"text":" in the Swift standard library, as well as","type":"text"},{"text":" ","type":"text"},{"code":"Publisher.filter","type":"codeVoice"},{"text":" in the Combine framework.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This parser fails if the predicate is not satisfied on the output of the upstream parser. For example,"},{"type":"text","text":" "},{"type":"text","text":"the following parser consumes only even integers and so fails when an odd integer is used:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var input = \"43 Hello, world!\"[...]","let number = try Int.parser().filter { $0.isMultiple(of: 2) }.parse(&input)","\/\/ error: processed value 43 failed to satisfy predicate","\/\/  --> input:1:1-2","\/\/ 1 | 43 Hello, world!","\/\/   | ^^ processed input"]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError\/filter(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError\/Parser-Implementations"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/Filter":{"title":"Parsers.Filter","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that filters the output of an upstream parser when it does not satisfy a predicate."}],"navigatorTitle":[{"text":"Filter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/Filter","kind":"symbol","url":"\/documentation\/parsing\/parsers\/filter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Filter","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError":{"role":"symbol","navigatorTitle":[{"text":"ReplaceError","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError","url":"\/documentation\/parsing\/parsers\/replaceerror","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ReplaceError","kind":"identifier"}],"kind":"symbol","title":"Parsers.ReplaceError","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError/filter(_:)":{"kind":"symbol","abstract":[{"text":"Returns a parser that filters output from this parser when its output does not satisfy the","type":"text"},{"text":" ","type":"text"},{"text":"given predicate.","type":"text"}],"role":"symbol","title":"filter(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"filter","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO"},{"text":".","kind":"text"},{"text":"Filter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing7ParsersO6FilterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/replaceerror\/filter(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError\/filter(_:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/ReplaceError/Parser-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","title":"Parser Implementations","url":"\/documentation\/parsing\/parsers\/replaceerror\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/ReplaceError\/Parser-Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}],"url":"\/documentation\/parsing\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","role":"symbol","title":"Parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}],"type":"topic"}}}