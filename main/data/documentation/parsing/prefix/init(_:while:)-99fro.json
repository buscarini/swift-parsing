{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"length"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")? = nil) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Parsing13CountingRangeP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange","kind":"typeIdentifier","text":"CountingRange"}],"platforms":["Linux"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/parsing\/prefix\/init(_:while:)-99fro"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"No overview available.","type":"text"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing6PrefixVAASsRszrlE_5whileACySsGqd___SbSJcSgtcAA13CountingRangeRd__lufc","roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"symbolKind":"init","extendedModule":"Parsing","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss7Elementa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"title":"init(_:while:)"},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"text":" value from an ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/parser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","role":"symbol","title":"Parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing":{"abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}],"url":"\/documentation\/parsing","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","role":"collection","title":"Parsing","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/CountingRange":{"url":"\/documentation\/parsing\/countingrange","navigatorTitle":[{"text":"CountingRange","kind":"identifier"}],"role":"symbol","abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CountingRange","title":"CountingRange","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CountingRange","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"title":"Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","url":"\/documentation\/parsing\/prefix","navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(_:while:)-99fro":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Ss7Elementa"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"abstract":[],"url":"\/documentation\/parsing\/prefix\/init(_:while:)-99fro","type":"topic","kind":"symbol","title":"init(_:while:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro","role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}